name: Build qmldom (WASM)

on:
  workflow_dispatch:
    inputs:
      qt_ref:
        description: 'Qt branch or tag'
        required: true
        default: 'dev'

permissions:
  contents: read
  checks: write

jobs:
  qmldom_wasm:
    runs-on: ubuntu-latest
    container:
      image: archlinux:base-devel
      options: --user root --workdir /
    steps:
      - name: Update and install dependencies
        run: |
          pacman -Syu --noconfirm
          pacman -Sy --noconfirm coreutils nodejs npm wget git cmake mesa ninja llvm clang rsync cargo rust lld unzip

      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Short git sha and config
        run: |
          echo "git_sha=$(git rev-parse --short $GITHUB_SHA)" | tee -a $GITHUB_ENV
          git config --global user.email "builder@nothing.com"
          git config --global user.name "Builder"
      
      - name: Install WASIX sysroot
        run: |
          wget https://github.com/SanderVocke/wasix-sysroot/releases/download/v1.0.0/wasix-sysroot.zip
          rm -rf /opt/wasix-sysroot
          unzip wasix-sysroot.zip -d /opt/wasix-sysroot

      - name: Determine Qt revision
        run: |
          echo "QT_REV=$(git ls-remote --tags git://code.qt.io/qt/qt5.git ${{ inputs.qt_ref }} | sed -r 's/([^ \t]*).*/\1/')" | tee -a $GITHUB_ENV

      - name: Cache load Qt Sources
        uses: actions/cache/restore@v3
        id: cache-qt-src
        with:
          path: qt6
          key: qt6-src-${{ env.QT_REV }}

      - name: Checkout Qt sources
        run: |
          if [ ! -d "qt6" ]; then git clone git://code.qt.io/qt/qt5.git qt6; fi
          cd qt6
          git fetch origin && git checkout ${{ env.QT_REV }}
          ./init-repository -f --module-subset=qtbase,qtdeclarative
      
      - name: Cache save Qt Sources
        uses: actions/cache/save@v3
        id: cache-save-qt-src
        with:
          path: qt6
          key: qt6-src-${{ env.QT_REV }}

      - name: Cache load Qt host build
        uses: actions/cache/restore@v3
        id: cache-qt-build-host
        with:
          path: qt6-build-host
          key: qt6-build-host-${{ env.QT_REV }}-1

      - name: Configure Qt6 (host)
        if: steps.cache-qt-build-host.outputs.cache-hit != 'true'
        run: |
          mkdir -p qt6-build-host
          cd qt6-build-host && ../qt6/configure -skip qtdeclarative -prefix /opt/qt6 -shared -no-opengl
      
      - name: Build and install Qt6 (host)
        if: steps.cache-qt-build-host.outputs.cache-hit != 'true'
        run: |
          cd qt6-build-host && cmake --build . --parallel 4
          cd qt6-build-host && cmake --install .
      
      - name: Cache save Qt host build
        uses: actions/cache/save@v3
        id: cache-save-qt-build-host
        with:
          path: qt6-build-host
          key: qt6-build-host-${{ env.QT_REV }}-1
        
      - name: Patch Qt6 for Wasm
        run: |
          cd qt6/qtbase && git am ../../.github/workflows/files/qt6.*.patch

      - name: Configure Qt6 (WASM)
        run: |
          mkdir -p qt6-build
          cd qt6-build
          ../qt6/configure -prefix /opt/qt6-wasm -static -no-opengl -platform wasm-emscripten -qt-host-path /opt/qt6 -make qmldom -- --fresh -DCMAKE_TOOLCHAIN_FILE=/opt/wasix-sysroot/clang-wasix.cmake_toolchain
      
      - name: Build qmldom
        run: |
          cd qt6-build
          cmake --build . --parallel 4 --target qmldom.js
     
      - name: Upload qmldom
        uses: actions/upload-artifact@v2
        with:
          name: qmldom-emscripten
          path: qt6-build/qtbase/bin/qmldom*

            
